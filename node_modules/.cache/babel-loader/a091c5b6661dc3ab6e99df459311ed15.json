{"ast":null,"code":"var _jsxFileName = \"/home/ziehuog/Desktop/working/studyReact/src/Components/Movies/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = props => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n\n  async function handleFetchMovies() {\n    let response = await fetch(`https://swapi.dev/api/films`);\n    let data = await response.json();\n    let transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        crawl: movieData.opening_crawl,\n        date\n      };\n    });\n    setMovies(transformedMovies);\n  }\n\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchMovies,\n      children: \"fetch movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Movie, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","Movie","props","movies","setMovies","handleFetchMovies","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","crawl","opening_crawl","date","console","log"],"sources":["/home/ziehuog/Desktop/working/studyReact/src/Components/Movies/Movie.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nconst Movie = (props) => {\n\n    const [movies, setMovies] = useState([])\n\n    async function handleFetchMovies(){\n        let response = await fetch(`https://swapi.dev/api/films`)\n        let data = await response.json()\n\n        let transformedMovies = data.results.map(movieData => {\n            return {\n                id: movieData.episode_id,\n                crawl: movieData.opening_crawl,\n                date\n\n            }\n        })\n        setMovies(transformedMovies)\n\n    \n    }\n\n    console.log(movies)\n    return ( \n        <React.Fragment>\n            <button onClick={handleFetchMovies}>\n                fetch movie\n            </button>\n        </React.Fragment>\n     );\n}\n \nexport default Movie;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EAErB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;EAEA,eAAeK,iBAAf,GAAkC;IAC9B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,CAA1B;IACA,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IAEA,IAAIC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;MAClD,OAAO;QACHC,EAAE,EAAED,SAAS,CAACE,UADX;QAEHC,KAAK,EAAEH,SAAS,CAACI,aAFd;QAGHC;MAHG,CAAP;IAMH,CAPuB,CAAxB;IAQAd,SAAS,CAACM,iBAAD,CAAT;EAGH;;EAEDS,OAAO,CAACC,GAAR,CAAYjB,MAAZ;EACA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,uBACI;MAAQ,OAAO,EAAEE,iBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CA7BD;;GAAMJ,K;;KAAAA,K;AA+BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}